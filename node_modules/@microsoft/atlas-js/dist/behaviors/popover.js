/* eslint-disable @typescript-eslint/no-use-before-define */
export function initPopover(container = document.body) {
    container.addEventListener('toggle', (event) => {
        const targetPopover = (event.target instanceof Element &&
            event.target.closest('details.popover')) ||
            (event.target instanceof Element &&
                event.target.shadowRoot?.activeElement?.closest('details.popover'));
        if (!targetPopover || !targetPopover.open) {
            return;
        }
        const keyHandler = (event) => {
            if (event.key === 'Escape') {
                closePopovers();
            }
        };
        const checkTarget = (event) => {
            if (!(event.target instanceof Element)) {
                return;
            }
            if (!targetPopover?.contains(event.target)) {
                closePopovers();
            }
            if (event.type === 'click' && event.target.closest('[data-popover-close]')) {
                closePopovers();
            }
        };
        const blurHandler = () => {
            if (document.activeElement?.nodeName?.toLowerCase() === 'iframe') {
                closePopovers();
            }
        };
        const closePopovers = () => {
            container.removeEventListener('focus', checkTarget, true);
            container.removeEventListener('click', checkTarget);
            container.removeEventListener('touchstart', checkTarget);
            container.removeEventListener('keydown', keyHandler);
            window.removeEventListener('blur', blurHandler);
            if (targetPopover?.open) {
                targetPopover.removeAttribute('open');
            }
        };
        container.addEventListener('focus', checkTarget, true);
        container.addEventListener('click', checkTarget);
        container.addEventListener('touchstart', checkTarget);
        container.addEventListener('keydown', keyHandler);
        window.addEventListener('blur', blurHandler);
    }, true);
}
