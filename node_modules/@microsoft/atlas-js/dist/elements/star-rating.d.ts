export declare class StarRatingElement extends HTMLElement {
    static get observedAttributes(): string[];
    coercedValue: string;
    constructor();
    get disabled(): boolean;
    set disabled(val: boolean);
    get name(): string;
    set name(val: string);
    get required(): boolean;
    set required(val: boolean);
    get type(): string;
    get value(): string;
    set value(val: string);
    get valueAsNumber(): number;
    /** TODO: add form related properties (i.e validity, etc */
    connectedCallback(): void;
    disconnectedCallback(): void;
    attributeChangedCallback(name: string, oldValue: string, newValue: string): void;
    updateContent(name: string, newValue: string): void;
    handleEvent(event: Event): void;
    updateStarFill(newValue: number): void;
}
declare global {
    interface Window {
        StarRatingElement: typeof StarRatingElement;
    }
    interface HTMLElementTagNameMap {
        'star-rating': StarRatingElement;
    }
}
//# sourceMappingURL=star-rating.d.ts.map